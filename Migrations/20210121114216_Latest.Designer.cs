// <auto-generated />
using JewelryStore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JewelryStore.Migrations
{
    [DbContext(typeof(JewelryStoreContext))]
    [Migration("20210121114216_Latest")]
    partial class Latest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("JewelryStore.Data.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = 123,
                            State = "CA",
                            StreetName = "Fake St",
                            ZipCode = 90210
                        });
                });

            modelBuilder.Entity("JewelryStore.Data.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            FirstName = "Marina",
                            LastName = "Lopez",
                            UserName = "marina.lopez"
                        });
                });

            modelBuilder.Entity("JewelryStore.Data.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 1
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 1
                        });
                });

            modelBuilder.Entity("JewelryStore.Data.Entities.OrderProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProduct");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 1,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            OrderId = 1,
                            ProductId = 3
                        });
                });

            modelBuilder.Entity("JewelryStore.Data.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Short necklaces",
                            Name = "14K Gold Necklace",
                            Price = 10500,
                            Type = "Gold"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Stud earrings",
                            Name = "18K Gold Earrings",
                            Price = 5500,
                            Type = "Gold"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Stackable rings",
                            Name = "24K Gold Ring",
                            Price = 6500,
                            Type = "Gold"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Short necklaces",
                            Name = "14K Gold Necklace",
                            Price = 3500,
                            Type = "Gold"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Long necklaces",
                            Name = ".925 Silver Necklace",
                            Price = 5000,
                            Type = "Silver"
                        });
                });

            modelBuilder.Entity("JewelryStore.Data.Entities.Client", b =>
                {
                    b.HasOne("JewelryStore.Data.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("JewelryStore.Data.Entities.Order", b =>
                {
                    b.HasOne("JewelryStore.Data.Entities.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("JewelryStore.Data.Entities.OrderProduct", b =>
                {
                    b.HasOne("JewelryStore.Data.Entities.Order", "Order")
                        .WithMany("Products")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JewelryStore.Data.Entities.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("JewelryStore.Data.Entities.Client", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("JewelryStore.Data.Entities.Order", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("JewelryStore.Data.Entities.Product", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
